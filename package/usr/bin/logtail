#!/bin/bash

#Help output function
printhelp () {
  echo -e "This tool was made for finding relevant information from \033[33;1m/var/log/syslog\033[0m file"
  echo -e "Usage: \033[33;1mlogtail -h\033[0m or \033[33;1mlogtail --help\033[0m - to print this help"
  echo -e "\033[33;1mlogtail\033[0m without arguments to print this help again"
  echo -e "\033[33;1mlogtail <argument1> <argument2>...\033[0m with as many arguments as you need"
  echo -e "where argument should be substring that you want to find from your log"
  echo -e "The output is last 50 lines from log, which contain \033[33;1m<argument1>\033[0m substring, then"
  echo -e "after any key pressed by the user, last 50 lines from log, which contain \033[33;1m<argument2>\033[0m substring etc."
  exit
}

#Check args for help 
helptrigger () {
  if [[ ${argarray[*]} =~ '-h' ]] || [[ ${argarray[*]} =~ '--help' ]]
      then
        printhelp
      fi
}

#Check if there are command line arguments
if [ $# -ne 0 ]
  then
    argarray=( "$@" )
    #Check if help is invoked
    helptrigger
  else
    #If there are no command line arguments
    printhelp
  fi

echo ""

#Check if there is syslog file
if [ -f "/var/log/syslog" ]
  then
    command="cat /var/log/syslog"
  else
    command="journalctl"
  fi

#Output of the results
for arg in "${argarray[@]}"; do
  echo -e "\033[34m$arg\033[37m"
  echo ""
  # sudo cat /var/log/syslog | grep $arg | tail -50
  sudo $command | grep $arg | tail -50
  echo ""
  echo ""
  if [[ $arg != ${argarray[-1]} ]]
    then
      printf "\033[33mPress any key to continue\033[37m"
      read -n 1 -s -r
      printf "\33[2K\r"
    fi
done  