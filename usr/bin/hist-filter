#!/bin/bash

#Help output function
printhelp () {
  echo -e "This tool was made for filtering  \033[33;1mbash command history\033[0m"
  echo -e "Usage: \033[33;1mhist-filter -h\033[0m or \033[33;1mhist-filter --help\033[0m - to print this help"
  echo -e "\033[33;1mhist-filter\033[0m without arguments to print this help again"
  echo -e "\033[33;1mhist-filter <substring1> <substring2>...\033[0m with as many arguments as you need"
  echo -e "The output will be last 50 commands from \033[33;1mbash history\033[0m, that contain \033[33;1m<substring1>\033[0m"
  echo -e "Then it waits for any key to be pressed by you and prints out last 50 commands, that contain <substring2> etc"
  exit
}

#Check args for help 
helptrigger () {
  if [[ ${argarray[*]} =~ '-h' ]] || [[ ${argarray[*]} =~ '--help' ]]
      then
        printhelp
      fi
}

#Check if there are command line arguments
if [ $# -ne 0 ]
  then
    argarray=( "$@" )
    #Check if help is invoked
    helptrigger
  else
    #If there are no command line arguments
    printhelp
  fi

echo ""

#Output of the results
for arg in "${argarray[@]}"; do
  echo -e "\033[34m$arg\033[37m"
  echo ""
  cat --number ~/.bash_history | grep $arg | tail -50
  echo ""
  echo ""
  if [[ $arg != ${argarray[-1]} ]]
    then
      printf "\033[33mPress any key to continue\033[37m"
      read -n 1 -s -r
      printf "\33[2K\r"
    fi
done 